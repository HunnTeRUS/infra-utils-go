// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/HunnTeRUS/infra-utils-go/gracefully_shutdown (interfaces: GracefullyShutdownInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	log "github.com/HunnTeRUS/infra-utils-go/configuration/logger"
	gomock "github.com/golang/mock/gomock"
)

// MockGracefullyShutdownInterface is a mock of GracefullyShutdownInterface interface.
type MockGracefullyShutdownInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGracefullyShutdownInterfaceMockRecorder
}

// MockGracefullyShutdownInterfaceMockRecorder is the mock recorder for MockGracefullyShutdownInterface.
type MockGracefullyShutdownInterfaceMockRecorder struct {
	mock *MockGracefullyShutdownInterface
}

// NewMockGracefullyShutdownInterface creates a new mock instance.
func NewMockGracefullyShutdownInterface(ctrl *gomock.Controller) *MockGracefullyShutdownInterface {
	mock := &MockGracefullyShutdownInterface{ctrl: ctrl}
	mock.recorder = &MockGracefullyShutdownInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGracefullyShutdownInterface) EXPECT() *MockGracefullyShutdownInterfaceMockRecorder {
	return m.recorder
}

// GracefullyShutdownRun mocks base method.
func (m *MockGracefullyShutdownInterface) GracefullyShutdownRun(arg0 http.Handler, arg1 string, arg2 log.Logger) <-chan error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GracefullyShutdownRun", arg0, arg1, arg2)
	ret0, _ := ret[0].(<-chan error)
	return ret0
}

// GracefullyShutdownRun indicates an expected call of GracefullyShutdownRun.
func (mr *MockGracefullyShutdownInterfaceMockRecorder) GracefullyShutdownRun(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GracefullyShutdownRun", reflect.TypeOf((*MockGracefullyShutdownInterface)(nil).GracefullyShutdownRun), arg0, arg1, arg2)
}
