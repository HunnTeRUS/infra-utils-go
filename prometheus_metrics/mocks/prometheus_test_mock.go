// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/HunnTeRUS/infra-utils-go/prometheus_metrics (interfaces: PrometheusMetricsInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	log "github.com/HunnTeRUS/infra-utils-go/configuration/logger"
	gomock "github.com/golang/mock/gomock"
)

// MockPrometheusMetricsInterface is a mock of PrometheusMetricsInterface interface.
type MockPrometheusMetricsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrometheusMetricsInterfaceMockRecorder
}

// MockPrometheusMetricsInterfaceMockRecorder is the mock recorder for MockPrometheusMetricsInterface.
type MockPrometheusMetricsInterfaceMockRecorder struct {
	mock *MockPrometheusMetricsInterface
}

// NewMockPrometheusMetricsInterface creates a new mock instance.
func NewMockPrometheusMetricsInterface(ctrl *gomock.Controller) *MockPrometheusMetricsInterface {
	mock := &MockPrometheusMetricsInterface{ctrl: ctrl}
	mock.recorder = &MockPrometheusMetricsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrometheusMetricsInterface) EXPECT() *MockPrometheusMetricsInterfaceMockRecorder {
	return m.recorder
}

// PrometheusMetrics mocks base method.
func (m *MockPrometheusMetricsInterface) PrometheusMetrics(arg0 log.Logger) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PrometheusMetrics", arg0)
}

// PrometheusMetrics indicates an expected call of PrometheusMetrics.
func (mr *MockPrometheusMetricsInterfaceMockRecorder) PrometheusMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrometheusMetrics", reflect.TypeOf((*MockPrometheusMetricsInterface)(nil).PrometheusMetrics), arg0)
}
